I.

generated ssl certificate to folder /etc/nginx/certificate (linked to ./certificate)
modified nginx config to https and ports in compose.yaml

ssl certificate:
openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
-keyout /path/to/nginx/certs/selfsigned.key \
-out /path/to/nginx/certs/selfsigned.crt


II. 

2 volumes (in /home/login/data)

in wordpress:
volumes:
      - wordpress_data:/var/www/html
and in nginx:
volumes:
	- wordpress_data:/usr/share/nginx/html

III.

dockerfiles - create 3 dockerfiles with one line FROM

Connecting to mariadb:
inside docker container:
# mariadb -u USER -p
if port 3306 is exposed:
# mysql -h localhost -P 3306 --protocol=tcp -u root -p

Steps for the info:
# SHOW DATABASES;
# USE exampledb;
# SHOW TABLES;
# [wordpress needs to be set up]

wordpress usernames - with env variables in compose.yaml

* domain name
# TODO In VM. 
echo "127.0.0.1 trusanov.42.fr" | sudo tee -a /etc/hosts
maybe add makefile rule for that

in nginx.conf server_name  ${DOMAIN_NAME}; (and add environemnt variable for docker)


* .env for environment vars
add env_file in all 3 services of docker compose and create .env file in src

* docker secrets
secrets in compose.yaml
WORDPRESS_DB_PASSWORD_FILE, MARIADB_ROOT_PASSWORD_FILE, MARIADB_PASSWORD_FILE in .env
certificates in secrets - moved crt, key in secrets, changed path in nginx, added secrets to compose

moved nginx.conf to nginx folder, made volume readonly

TODO.
nginx logs

LATER.
more dockerfile practices
nginx version
nginx user
nginx stopsignal
nginx expose
nginx entrypoint

VM
volumes in /home/login/data of the host machine

Read about PID 1 and the best practices for writing Dockerfiles.

https://cloud.theodo.com/en/blog/docker-processes-container
https://www.docker.com/blog/docker-best-practices-choosing-between-run-cmd-and-entrypoint/#:~:text=In%20the%20context%20of%20Unix,every%20process%20in%20the%20system.

learn how exactly docker image looks like, what are those 'layers' and how actually RUN works
whats "-g daemon off"?

LATER.
1 network - considered to ignore it for now - only work with an older mysql version for whatever reason
[A docker-network that establishes the connection between your containers.]
generate all docker secrets randomly with openssl rand (https://docs.docker.com/engine/swarm/secrets/)

OPTIONAL.
[In your WordPress database, there must be two users, one of them being the administrator] - maybe need to add third user idk
split env in 3 different files for each container
